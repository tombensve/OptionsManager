/* 
 * 
 * PROJECT
 *     Name
 *         OptionsManager
 *     
 *     Description
 *         Manages application/tool options. Options are mapped to Java Bean properties
 *         using annotations. Help texts can be specified for options also using
 *         annotations and a complete help text can be generated by the options manager.
 *         Options can be loaded from command line arg String[] array, an XML file, or a
 *         java properties file.
 *         
 * COPYRIGHTS
 *     Copyright (C) 2009 by Natusoft AB All rights reserved.
 *     
 * LICENSE
 *     Apache 2.0 (Open Source)
 *     
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *     
 *       http://www.apache.org/licenses/LICENSE-2.0
 *     
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 *     
 * AUTHORS
 *     tommy ()
 *         Changes:
 *         2014-07-09: Created!
 *         
 */
package se.natusoft.tools.optionsmgr.internal;

import se.natusoft.tools.optionsmgr.annotations.Description;
import se.natusoft.tools.optionsmgr.annotations.Name;
import se.natusoft.tools.optionsmgr.annotations.OptionsModel;

/**
 * Wraps a Field object and supplies information about the annotations.
 */
public class OptionsModelAnnotationHelper {

    //
    // Private Members
    //

    /** The name of the model. */
    private String name = "";

    /** The model description. */
    private String description = "";

    /** Set to true if an annotated name has been provided. */
    private boolean hasNameAnnotation = false;

    /** Seet to true if an annotated description has been provided. */
    private boolean hasDescriptionAnnotation = false;

    //
    // Constructors
    //

    /**
     * Creates a new OptionsModelAnnotationHelper for the specified possibly annotated field.
     *
     * @param modelClass The model class to get annotation help for.
     */
    public OptionsModelAnnotationHelper(Class<?> modelClass) {
        OptionsModel optionsModelAnn = modelClass.getAnnotation(OptionsModel.class);
        if (optionsModelAnn != null) {
            this.name = optionsModelAnn.name();
            this.hasNameAnnotation = true;

            if (optionsModelAnn.description().length() > 0) {
                this.description = optionsModelAnn.description();
                this.hasDescriptionAnnotation = true;
            }
        }

        Description descriptionAnn = modelClass.getAnnotation(Description.class);
        if (descriptionAnn != null) {
            this.description = descriptionAnn.value();
            this.hasDescriptionAnnotation = true;
        }

        Name nameAnn = modelClass.getAnnotation(Name.class);
        if (nameAnn != null) {
            this.name = nameAnn.value();
            this.hasNameAnnotation = true;
        }
    }

    //
    // Methods
    //

    /**
     * Returns true if there is a name available.
     */
    public boolean hasName() {
        return this.name != null && this.name.trim().length() > 0;
    }

    /**
     * Returns true if a name annotation have been found. 
     */
    public boolean hasNameAnnotation() {
        return this.hasNameAnnotation;
    }

    /**
     * Returns the option name.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Returns true if there is a description available.
     */
    public boolean hasDescription() {
        return this.description != null && this.description.trim().length() > 0;
    }

    /**
     * Returns true if a description annotation have been found.
     */
    public boolean hasDescriptionAnnotation() {
        return this.hasDescriptionAnnotation;
    }

    /**
     * Returns the description of the option.
     */
    public String getDescription() {
        return this.description;
    }

}
